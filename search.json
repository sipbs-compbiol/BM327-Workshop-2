[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BM327 Workshop 2: Identifying UTI Adhesion Factors",
    "section": "",
    "text": "1 Preface\nWelcome to BM327 (Being a Biomolecular Scientist 3) bioinformatics workshop 2 for 2024-25.\nThis is the first presentation of this material, and we would be very grateful to hear feedback about it by email or through the GitHub repository Issues page.",
    "crumbs": [
      "A high-throughput genomic screen for adherence factors",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "BM327 Workshop 2: Identifying UTI Adhesion Factors",
    "section": "1.1 Overview",
    "text": "1.1 Overview\nThis workshop asks you to carry out data analysis and visualisation to identify an adhesion factor important for urinary tract infection. You will be using the statistical programming language R and the widely-used graphics library ggplot2 to do this.\n\n\n\n\n\n\nImportant Note\n\n\n\nThere is new material in this workshop that is not covered in lectures, and this material is examinable. Please take care to read the text in the expandable callout boxes, as well as that for the workshop, to be sure you have understood the topic and obtain full value from the exercise.\nThe workshop material will remain live online for the duration of BM327, and you can revisit it whenever you wish, for practice or revision.\n\n\nYou should be able to complete this workshop in under two hours.",
    "crumbs": [
      "A high-throughput genomic screen for adherence factors",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "index.html#learning-objectives",
    "href": "index.html#learning-objectives",
    "title": "BM327 Workshop 2: Identifying UTI Adhesion Factors",
    "section": "1.2 Learning Objectives",
    "text": "1.2 Learning Objectives\nBy the end of this workshop, students will be able to:\n\nPlot experimental data using R and ggplot2\nUse and interpret box-and-whisker, violin, and 1D scatter plots\nUse linear modelling to estimate effect sizes of biological interventions\nUse linear mixed models to correct for experimental batch effects",
    "crumbs": [
      "A high-throughput genomic screen for adherence factors",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "index.html#assessment",
    "href": "index.html#assessment",
    "title": "BM327 Workshop 2: Identifying UTI Adhesion Factors",
    "section": "1.3 Assessment",
    "text": "1.3 Assessment\nThis workshop activity itself is not formally assessed although, as noted, all the material it contains is examinable. There is a formative assessment on MyPlace, which you should complete as part of the workshop.",
    "crumbs": [
      "A high-throughput genomic screen for adherence factors",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "part_00_experiment.html",
    "href": "part_00_experiment.html",
    "title": "A high-throughput genomic screen for adherence factors",
    "section": "",
    "text": "In this section of the workshop we introduce the experiment that provides the data you will be working with.\nThe motivation of the experiment is to identify candidate adhesion factors in a uropathogenic Escherichia coli (UPEC). UPECs are the most common cause of community-acquired urinary tract infections (UTIs), and imfection can cause milder symptoms like discomfort, polyuria, and fever, but in some cases can lead to kidney damage, sepsis and death.\nOne of the features of UPECs that facilitaties infection is their ability to adhere (stick) to human tissue, and also to materials that might be inserted into the urinary tract, such as catheter tubes. The better, and longer, a pathogen can hang around in the urinary tract, the more chance it has to contribute to illness. If we can identify the molecular components contributing to adherence, we might be able to target them with drugs or produce materials to which they stick less well, reducing the disease burden.\nThe experiment whose data you will be working with aims to identity molecular causes of adherence through a high throughput positive selection screen, identifying genes that specifically appear to improve retention of bacteria in the urinary tract.",
    "crumbs": [
      "A high-throughput genomic screen for adherence factors"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  The Experiment",
    "section": "",
    "text": "2.1 Experimental overview\nUropathogenic Escherichia coli (UPEC) employs a complex set of molecular factors that allow it to evade host defences, resist antibiotic treatment, and persist in the urinary tract, ultimately facilitating pathogenesis.\nTo remain in the urinary tract UPEC employs adherence factors, molecules that act to help UPEC adhere to the tissue of the channel itself, or to material in that channel, such as catheter tubes. If we can intervene to reduce this adherence, we can shorten the dwell time of the microbe and reduce the impact of disease.\nThe overall plan of the experiment is sketched in Figure 2.1.\nA bacterial artificial chromosome (BAC) library is constructed for an E. coli UPEC isolate.\nThe BAC library is then passaged through a mouse model (catheterised mouse) to emulate introduction to the human catheterised urinary tract. After passage and washing of the extracted catheter tube, the tube was used as inoculum for a further round of incubation to culture adherent bacteria.\nAfter passage, the total gDNA from the three control and three mouse system cultures is sequenced. This produces read counts corresponding to three kinds of genes:",
    "crumbs": [
      "A high-throughput genomic screen for adherence factors",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Experiment</span>"
    ]
  },
  {
    "objectID": "intro.html#experimental-overview",
    "href": "intro.html#experimental-overview",
    "title": "2  The Experiment",
    "section": "",
    "text": "Figure 2.1: Overview of the experimental protocol. 1: a BAC library is constructed for UPEC in a DH10B E.coli background. 2: a triplicate library of 384clones is produced. The library is passaged three times through (3a) a control arm or (3b) a mouse/catheter model. 4: After serial passage, total gDNA from the resulting cultures is Illumina sequenced.\n\n\n\n\n\n\n\n\n\n\nBacterial artificial chromosomes (BACs)\n\n\n\nA bacterial artificial chromosome is a DNA construct that introduces a large genomic region (typically 150-350kbp) from a genome of interest into a “neutral” background genome. In this experiment, genomic regions from UPEC are introduced into a “neutral” background E. coli (DH10B). This allows us to investigate the effect of genes from UPEC when expressed by an otherwise non-pathogenic E. coli.\n\n\n\n\n\n\n\n\nExperimental detail\n\n\n\n\n\nThe UPEC genome was partially digested with _Hind_III and cloned into a pV41 vector. This was used to generate three pools of 384 BAC clones to facilitate replication.\n\n\n\n\n\n\n\n\n\n\nPassage\n\n\n\nPassage is the serial, iterated growth of bacteria under a particular environment or series of environments. This approach is usually taken to subject the bacteria to a specific selection pressure so that we can observe how it evolves in response to that pressure.\nThis is a relatively common approach to investigating bacterial virulence factors.\n\n\n\n\n\n\n\n\nExperimental detail\n\n\n\n\n\nMouse passage was allowed to proceed for 18h. Subsequent culturing was performed in LB media at 37 degC for 18h between passages.\nA parallel control passage, identical except that bacteria were cultured in LP for 18h rather than in the mouse model, was also performed.\nThree rounds of passage were performed.\n\n\n\n\n\ngenes present only in the background DH10B\ngenes present in both DH10B and UPEC\ngenes present only in UPEC and carried through passage",
    "crumbs": [
      "A high-throughput genomic screen for adherence factors",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Experiment</span>"
    ]
  },
  {
    "objectID": "intro.html#expected-interpretation",
    "href": "intro.html#expected-interpretation",
    "title": "2  The Experiment",
    "section": "2.2 Expected interpretation",
    "text": "2.2 Expected interpretation\nWe are most interested in the genes that are present only in UPEC, but which form part of the BAC library.\nWe expect that the serial passage process enriches our cultures for bacteria that adhere better to the urinary tract and/or catheter material. As individual clones contain only fragments of the UPEC genome, those clones that don’t contain adherence factors are expected to be selected out of the mixture, leaving only clones with UPEC genes that promote adherence.\nBy statistical analysis of the read counts, we aim to identify UPEC-specific genes that are overrepresented in the final mixtures that have been through mouse passage, but that are not overrepresented in the control passage through culture alone.\n\n\n\n\n\n\nHow did that work out?\n\n\n\nYou can see how well this worked, if at all, in the next section.",
    "crumbs": [
      "A high-throughput genomic screen for adherence factors",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Experiment</span>"
    ]
  },
  {
    "objectID": "experimental_results.html",
    "href": "experimental_results.html",
    "title": "3  Experimental results",
    "section": "",
    "text": "As noted in Chapter 2, we aim to identify UPEC-specific genes that are overrepresented in the final mixtures that have been through mouse passage, but that are not overrepresented in the control passage through culture alone.\nThese results were obtained using a Bayesian statistical multilevel regression technique, and are presented graphically below. As the UPEC genome comprises a chromosome and an accompanying plasmid, these are shown separately.\nResults are shown for both post-control, and post-mouse passage arms of the experiment.\n\n\n\n\n\n\nNote\n\n\n\nThe statistical methodology is beyond the scope of this workshop. But please do ask if you’re interested.\n\n\n\n\n\n\n\n\nFigure 3.1: Post-control passage over-and under-representation of UPEC chromosomal genes in the DH10B background. “Neutral” genes that occur at the expected frequency are indicated in blue. Under-represented genes are indicated in purple, and over-represented genes are indicated in green (lines indicate confidence intervals for observed occurrence).\n\n\n\n\n\n\n\n\n\nFigure 3.2: Post-mouse passage over-and under-representation of UPEC chromosomal genes in the DH10B background. “Neutral” genes that occur at the expected frequency are indicated in blue. Under-represented genes are indicated in purple, and over-represented genes are indicated in green (lines indicate confidence intervals for observed occurrence).\n\n\n\n\n\n\n\n\n\nFigure 3.3: Post-control passage over-and under-representation of UPEC plasmid genes in the DH10B background. “Neutral” genes that occur at the expected frequency are indicated in blue. Under-represented genes are indicated in purple, and over-represented genes are indicated in green (lines indicate confidence intervals for observed occurrence).\n\n\n\n\n\n\n\n\n\nFigure 3.4: Post-mouse passage over-and under-representation of UPEC plasmid genes in the DH10B background. “Neutral” genes that occur at the expected frequency are indicated in blue. Under-represented genes are indicated in purple, and over-represented genes are indicated in green (lines indicate confidence intervals for observed occurrence).",
    "crumbs": [
      "A high-throughput genomic screen for adherence factors",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Experimental results</span>"
    ]
  },
  {
    "objectID": "part_03_batches.html",
    "href": "part_03_batches.html",
    "title": "Correcting for batch effects",
    "section": "",
    "text": "In real life experiments are not always “clean,” in the sense that we cannot always construct our experiments to exclude all events or factors that might influence the outcome.\nIn this part of the workshop you will meet some real experimental data which, due to the need to spread the work over a period of months required parts of the experiment to be performed by different people at different times.\n\n\n\n\n\n\nCaution\n\n\n\nThe situation we consider here, where more than one researcher carries out sections of the experiment months apart, is quite obvious. The scientists involved knew that there might be an infuence on the outcome and took it into account when recording their data.\nHowever, many such interfering effects can creep into experimental data without our realising it. It is always good practice to investigate your experimental data to look for evidence of similar kinds of effects.\nAs you will see, it can be possible to account and correct for these effects when they arise.",
    "crumbs": [
      "Correcting for batch effects"
    ]
  },
  {
    "objectID": "visualising_batches.html",
    "href": "visualising_batches.html",
    "title": "4  Visualising Experimental Data",
    "section": "",
    "text": "4.1 Introduction\nThe experiment that was actually run to gather data on adherence to human tissue and catheter material ran into a few scheduling problems.\nUltimately the experiment was run by multiple scientists in the group, and measurements were taken in groups of five datapoints, where all five measurements - corresponding to a single bacterial line - were collected in the course of an afternoon. Each group, or batch, of five measurements contained results for only one of the WT (control), KO (knockout), empty (empty vector), and complement (complemented gene) lines. There were four such groups or batches for the human tissue experiment, and eight for the catheter material experiment. with four such batches of five measurements for each",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Visualising Experimental Data</span>"
    ]
  },
  {
    "objectID": "visualising_batches.html#task-1-load-and-inspect-your-data",
    "href": "visualising_batches.html#task-1-load-and-inspect-your-data",
    "title": "4  Visualising Experimental Data",
    "section": "4.2 Task 1: Load and inspect your data",
    "text": "4.2 Task 1: Load and inspect your data\nThere are two data files containing your experimental data: tissue.csv and catheter.csv.\n\n\n\n\n\n\nLoad your data from file\n\n\n\nUse the WebR cell below to load your data into two variables: tissue for the human tissue experiment, and catheter for the catheter material experiment.\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe column types are, in order: factor, number, integer, number, integer, integer, integer and can be expressed as \"fniniii\" for the col_types option in read_csv()\n\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nI need a hint\n\n\n\n\n\n\nUse read_csv() to load your data into two different dataframes\nUse glimpse() or head() to inspect the format of your data\n\n\n\n\n\n\n\n\n\n\nHelp, I’m stuck!\n\n\n\n\n\nUse the R code below to load your data\ntissue &lt;- read_csv(\"tissue.csv\", col_types=\"fniniii\")\ncatheter &lt;- read_csv(\"catheter.csv\", col_types=\"fniniii\")\nUse the R code below to inspect your data\nglimpse(tissue)\nglimpse(catheter)\n\n\n\n\n4.2.1 The format of your dataset\nYour dataset has been provided in a specific format to make plotting and analysis easier for this workshop.\n\n\n\n\n\n\nNote\n\n\n\nThis workshop focuses on demonstrating how to visualise, analyse, and interpret experimental data. The principles and techniques of cleaning and manipulating raw data into a suitable form for analysis is outside the scope of this material.\n\n\n\n\n\n\n\n\nCallout-todo\n\n\n\nExplain the meanings of the columns and why they are the datatypes they are.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Visualising Experimental Data</span>"
    ]
  },
  {
    "objectID": "visualising_batches.html#visualise-the-datasets",
    "href": "visualising_batches.html#visualise-the-datasets",
    "title": "4  Visualising Experimental Data",
    "section": "4.3 Visualise the datasets",
    "text": "4.3 Visualise the datasets\n\n4.3.1 The catheter material dataset\n\n\n\n\n\n\nVisualise the catheter dataset\n\n\n\nUse the WebR cell below to visualise the data from the catheter material experiment.\nSee if you can give the graph these properties:\n\nThe categories/labels should be in this order on the x-axis, from left to right: WT, KO, empty, complement\nThere should be one boxplot per category/label\nEach batch should be assigned a different colour for easy identification\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nI need a hint!\n\n\n\n\n\n\nYou can order the categories on the x-axis by replacing x=label with x=factor(label, level=c(\"WT\", \"KO\", \"empty\", \"complement\")\nIf you use aes(colour=batch) in the ggplot() base layer, then the boxplots will be split. To avoid this, use aes(colour=factor(batch)) in geom_jitter() instead.\n\n\n\n\n\n\n\n\n\n\nHelp, I’m stuck!\n\n\n\n\n\nUse the R code below to render your graph:\np1 &lt;- ggplot(catheter,\n             aes(x=factor(label, level=c(\"WT\", \"KO\", \"empty\", \"complement\")),\n                 y=logCFU)) +\n  geom_boxplot() +\n  geom_jitter(width=0.2,\n              aes(colour=factor(batch))) +\n  xlab(\"experiment\")\np1\n\n\n\n\n\n4.3.2 The human tissue dataset\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nI need a hint\n\n\n\n\n\nYou can use almost exactly the same solution as for the catheter dataset, but:\n\nchange p1 to p2 to create a new graph rather than overwriting the old one\nmake sure you are working with the tissue dataset\n\n\n\n\n\n\n\n\n\n\nHelp, I’m stuck!\n\n\n\n\n\nUse the R code below to render your graph:\np2 &lt;- ggplot(tissue,\n             aes(x=factor(label, level=c(\"WT\", \"KO\", \"empty\", \"complement\")),\n                 y=logCFU)) +\n  geom_boxplot() +\n  geom_jitter(width=0.2,\n              aes(colour=factor(batch))) +\n  xlab(\"experiment\")\np2",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Visualising Experimental Data</span>"
    ]
  },
  {
    "objectID": "visualising_batches.html#interpret-the-data",
    "href": "visualising_batches.html#interpret-the-data",
    "title": "4  Visualising Experimental Data",
    "section": "4.4 Interpret the data",
    "text": "4.4 Interpret the data\n\n4.4.1 The catheter material dataset\nYour plot of the catheter data should look similar to that in Figure 4.1.\nThe y-axis shows the log of the colony-forming units (CFU) per millilitre, and is a measure of the amount of each type of bacteria (wild-type/control, etpD knockout, knockout with empty vector, and complemented knockout) that were recovered. The x-axis gathers the datpoints for each type of bacteria.\nEach boxplot shows the median value as a thick horizontal line, a box extending from the 25th and 75th percentiles, and whiskers extending to no more than 1.5 \\(\\times\\) the interquartile range (IQR) of the data. Datapoints beyond the whiskers can be considered as outliers.\nExamine your plot (or Figure 4.1) and consider the questions below.\n\n\n\n\n\n\n\n\nFigure 4.1\n\n\n\n\n4.4.1.1 What is the overall effect of each bacterial variant?\n\n\n\n\n\n\nQuestions\n\n\n\nThe median logCFU of the wild-type (WT) control is approximately 6.35. What is the approximate logCFU of each of the three bacterial lines?\n\nKO (the etpD knockout)\nempty (the etpD knockout carrying an empty plasmid vector)\ncomplement (the etpD knockout carrying a plasmid vector that expresses the etpD gene)\n\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\n\nThe KO line has a median logCFU of 6.13\nThe empty line has a median logCFU of 5.86\nThe complement line has a median logCFU of 6.46\n\n\n\n\n\n\n\n\n\n\nQuestions\n\n\n\nTaking the wild-type WT line as a baseline level of “stickiness” to the catheter material. Based only on your graph (or Figure 4.1) Is the “stickiness” of each of the three remaining bacterial lines approximately greater than, less than, or about the same as the wild type?\n\nKO (the etpD knockout)\nempty (the etpD knockout carrying an empty plasmid vector)\ncomplement (the etpD knockout carrying a plasmid vector that expresses the etpD gene)\n\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\n\nFewer CFUs/mL are recovered from the KO line, so it seems to be less “sticky” than the wild type\nFewer CFUs/mL are recovered from the empty line, so it seems to be less “sticky” than the wild type\nAbout the same CFUs/mL are recovered from the complement line, so it seems to be about as “sticky” as the wild type\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nDoes the empty line appear to be more “sticky”, less “sticky”, or just about as “sticky” as the KO line?\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\nFewer CFUs/mL are recovered from the empty line, so it appears to be less “sticky” than the KO line.\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nBased on your answers above, do you think there is evidence that the etpD gene might contribute to adhesion of the bacteria to catheter material?\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\nWhen the etpD gene is knocked out (KO) fewer CFUs are recovered from the substrate, which we can interpret as the bacteria being less “sticky.”\nSimilarly, when the etpD gene is expressed from a plasmid (complement) more CFUs are recovered than was the case for the KO, so it appears that restoration of the etpD gene might make the bacteria more “sticky,” i.e. contribute to increased adherence.\n\n\n\n\n\n\n4.4.2 The tissue material dataset\nYour plot of the tissue data should look similar to that in Figure 4.2.\nThe y-axis shows the log of the colony-forming units (CFU) per millilitre, and is a measure of the amount of each type of bacteria (wild-type/control, etpD knockout, knockout with empty vector, and complemented knockout) that were recovered. The x-axis gathers the datpoints for each type of bacteria.\nEach boxplot shows the median value as a thick horizontal line, a box extending from the 25th and 75th percentiles, and whiskers extending to no more than 1.5 \\(\\times\\) the interquartile range (IQR) of the data. Datapoints beyond the whiskers can be considered as outliers.\nExamine your plot (or Figure 4.2) and consider the questions below.\n\n\n\n\n\n\n\n\nFigure 4.2\n\n\n\n\n4.4.2.1 What is the overall effect of each bacterial variant?\n\n\n\n\n\n\nQuestions\n\n\n\nThe median logCFU of the wild-type (WT) control is approximately 6.61. What is the approximate logCFU of each of the three bacterial lines?\n\nKO (the etpD knockout)\nempty (the etpD knockout carrying an empty plasmid vector)\ncomplement (the etpD knockout carrying a plasmid vector that expresses the etpD gene)\n\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\n\nThe KO line has a median logCFU of 6.24\nThe empty line has a median logCFU of 6.22\nThe complement line has a median logCFU of 6.24\n\n\n\n\n\n\n\n\n\n\nQuestions\n\n\n\nTaking the wild-type WT line as a baseline level of “stickiness” to the catheter material. Based only on your graph (or Figure 4.1) Is the “stickiness” of each of the three remaining bacterial lines approximately greater than, less than, or about the same as the wild type?\n\nKO (the etpD knockout)\nempty (the etpD knockout carrying an empty plasmid vector)\ncomplement (the etpD knockout carrying a plasmid vector that expresses the etpD gene)\n\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\n\nFewer CFUs/mL are recovered from the KO line, so it seems to be less “sticky” than the wild type\nFewer CFUs/mL are recovered from the empty line, so it seems to be less “sticky” than the wild type\nFewer CFUs/mL are recovered from the complement line, so it seems to be less “sticky” than the wild type\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nDoes the empty line appear to be more “sticky”, less “sticky”, or just about as “sticky” as the KO line?\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\nAbout the same level of CFUs/mL are recovered from the empty line, so it appears to be approximately as “sticky” as the KO line.\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nBased on your answers above, do you think there is evidence that the etpD gene might contribute to adhesion of the bacteria to catheter material?\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\nWhen the etpD gene is knocked out (KO) fewer CFUs are recovered from the substrate, which we can interpret as the bacteria being less “sticky.”\nHowever, when the etpD gene is expressed from a plasmid (complement) no more CFUs are recovered than was the case for the KO, so it appears that restoration of the etpD gene does not by itself make the bacteria more “sticky,” i.e. contribute to increased adherence.\n\n\n\n\n\n\n4.4.3 The influence of batch effects\nAs noted above, the experiment as performed involved obtaining measurements in groups of five. Each group of five measurements may have been obtained on a different day, by a different scientist.\nSmall differences between the way scientists work, or batches of chemicals, media, and reagents, can lead to systematic differences in results that are due to those changes and not to the biological influence under investigation (here, the effect of the etpD gene on bacterial adherence).\n\n\n\n\n\n\nCaution\n\n\n\nWhen inspecting experimental data, you should check for potential signs of batch effects using exploratory data visualisation. The visualisation you performed above is exploratory data visualisation.\n\nDo datapoints that are meant to measure the same thing seem to form distinct and separate clusters?\nIf you colour the datapoints by a factor that is not meant to be a factor of interest in the experimental design (e.g. individual experimenter, date the measurement was obtained, media batch number) do these correlate with the clusters?\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nSome common visualisation and ordination techniques for identifying batch effects include PCA (principal components analysis) and MDS (multidimenstional scaling).\nRigorous experimental design is the best way to avoid batch effects and confounding. Techniques such as sample randomisation and statistical balancing can help to avoid unwanted and unanticipated batch effects.\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nDo you see evidence of batch effects in Figure 4.1 and/or Figure 4.2? Why do you think this?\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\nThere is clear visual evidence of batch effects in both Figure 4.1 and/or Figure 4.2.\nFor example, in Figure 4.1 the logCFU values for batches 1 and 2 are obviously grouped together and differ from each other, despite apparently measuring the same values. The evidence for a batch effect is less obvious for batches 3 and 4.\nLikewise in Figure 4.2 the values for batch 5 are much lower than those for the other empty and complement batches. Values for batches 1 and 2 also appear to be systematically lower than for the other batches in the WT and KO lines.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Visualising Experimental Data</span>"
    ]
  },
  {
    "objectID": "modelling_data.html",
    "href": "modelling_data.html",
    "title": "5  Modelling Experimental Data",
    "section": "",
    "text": "5.1 Introduction\nIn Chapter 4 we used boxplots and scatterplots to visualise the data obtained from the adherence experiments with the wild-type (WT), knockout (KO), empty vector (empty), and complemented gene (complement) lines.\nWe saw that there appeared to be an effect of knocking out the etpD gene on the adherence (stickiness) of bacteria to both human tissue and to the catheter material. However, restoring the etpD gene appeared only to make a difference to adherence to the catheter material.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Modelling Experimental Data</span>"
    ]
  },
  {
    "objectID": "modelling_data.html#introduction",
    "href": "modelling_data.html#introduction",
    "title": "5  Modelling Experimental Data",
    "section": "",
    "text": "Important\n\n\n\nWe also observed an apparent batch effect in both sets of experiments, where the results obtained appeared to be strongly affected by which experimental batch they were obtained in.\nWe should like to remove the influence of these batch effects as they make our results less reliable as a representation of the biological influence of the etpD gene.\n(we will do this in the next section, Chapter 6)\n\n\n\n\n\n\n\n\nCaution\n\n\n\nAll our conclusions so far have been drawn from visual inspection of graphs, but we can do better than this by modelling the influence of biological factors of interest on our outcome (i.e. logCFU/mL).\nBy using statistical modelling approaches, we can estimate the quantitative influence of (i) knocking out the gene, (ii) introducing an empty plasmid, and (iii) reintroducing the gene as a complement and we shall do this below.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Modelling Experimental Data</span>"
    ]
  },
  {
    "objectID": "modelling_data.html#the-model",
    "href": "modelling_data.html#the-model",
    "title": "5  Modelling Experimental Data",
    "section": "5.2 The Model",
    "text": "5.2 The Model\nWe can consider the measured “stickiness” or adherence of the bacteria to be composed of the combined influence of a number of factors. We can use our experimental results and a statistical method called linear modelling (or linear regression) to estimate the amount of influence each factor has.\nFirst though, we start with a baseline level of “stickiness…”\n\n5.2.1 The baseline: wild-type adherence (WT)\nThe wild-type (control) line is expected to display the baseline level of adherence for the bacteria.\nSo, when we measure the WT line we are establishing the natural baseline “stickiness” of the bacterium, measured as logCFU recovered from the substrate. In statistical terms we might make this into an equation like:\n\\[ \\textrm{measured logCFU} = \\textrm{baseline}  \\tag{5.1}\\]\nand Equation 5.1 says “the logCFU we measure for any wild-type bacterium is that of the baseline, wild-type organism.”\nIn reality though, we always expect some completely random experimental measurement error, which we can represent with the symbol \\(\\epsilon\\) (epsilon) as Equation 5.2:\n\\[ \\textrm{measured logCFU} = \\textrm{baseline} + \\epsilon  \\tag{5.2}\\]\ni.e. “the logCFU we measure for any wild-type bacterium is that of the baseline, wild-type organism, plus or minus some measurement error.”\n\n\n5.2.2 The first intervention: knocking out a gene of interest (KO)\nIf we don’t knock out a gene from a bacterium it is just the same as the wild type. We’d expect the logCFU we recover from the substrate to be the baseline logCFU.\nBut, if we do knock out a gene, we can represent the measured logCFU for that bacterium by Equation 5.3:\n\\[ \\textrm{measured logCFU} = \\textrm{baseline} + \\textrm{knockout} + \\epsilon  \\tag{5.3}\\]\nwhich says “the logCFU we measure for the bacterium is the baseline level, plus the effect of knocking out the gene.”\nEssentially the difference in measured logCFU between the WT and KO groups is taken to be due to the effect of knocking out the gene of interest (plus or minus a bit of measurement error).\n\n\n5.2.3 Introducing the empty vector (empty)\nIntroducing an empty plasmid vector puts strain on a bacterium and might affect its “stickiness.” As we only introduce the empty vector into a knockout strain, the measured logCFU for that bacterium is that of the baseline plus the effect of the knockout, and any effect of including the empty vector. We can describe this in Equation 5.4:\n\\[ \\textrm{measured logCFU} = \\textrm{baseline} + \\textrm{knockout} + \\textrm{empty} + \\epsilon  \\tag{5.4}\\]\nwhich says “the logCFU we measure for the bacterium is the baseline level, plus the effect of knocking out the gene of interest, and the effect of introducing an empty vector (plus or minus some measurement error).”\n\n\n5.2.4 Complementing the gene (complement)\nFinally, reintroducing the gene on the plasmid vector (complementing the gene) is expected to change the logCFU recovered. The effect of introducing the gene is added on to the effect of knocking it out and introducing an empty plasmid, and is described in Equation 5.5:\n\\[ \\textrm{measured logCFU} = \\textrm{baseline} + \\textrm{knockout} + \\textrm{empty} + \\textrm{complement} + \\epsilon  \\tag{5.5}\\]\n\n\n5.2.5 So what?\nBy now you might be thinking: “we’ve made an equation that represents the quantitative influence of knocking out a gene, introducing an empty plasmid, and complementing the gene, but so what? - how do we get numbers for this?”\nTo get those numbers, we can use a statistical technique called linear modelling (aka linear regression). It is very powerful and useful, and remarkably straightforward to use in R.\n\n\n\n\n\n\nNote\n\n\n\nWe will walk through the modelling process for the catheter data, but modelling the tissue data is left as an exercise for you to solve.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Modelling Experimental Data</span>"
    ]
  },
  {
    "objectID": "modelling_data.html#fitting-the-catheter-model",
    "href": "modelling_data.html#fitting-the-catheter-model",
    "title": "5  Modelling Experimental Data",
    "section": "5.3 Fitting the catheter model",
    "text": "5.3 Fitting the catheter model\nWe will use the R built-in function lm() to fit the model in Equation 5.5 to our catheter dataset in the WebR cells below.\n\n5.3.1 Load the data\n\n\n\n\n\n\nImportant\n\n\n\nWe have preloaded the data for you as the dataframes tissue and catheter.\nUse the WebR cell below to confirm the catheter data is loaded\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNote that the data contains three columns: KO, empty, and complement that contain either a 1 or 0 value.\nThese columns describe whether the logCFU measurement in the row corresponds to a line that is affected by a gene knockout (KO = 1), the presence of a plasmid vector (empty = 1), or the reintroduced gene (complement = 1). These columns allow us to use the lm() function to estimate the influence of each biological intervention.\n\n\n\n\n\n\nNote\n\n\n\nWe assume that measurements of the bacteria all share the same (wild-type) baseline.\n\n\n\n\n5.3.2 Define the model\nR uses a specific syntax for defining a model, where factors of interest influence a measured value.\nHere, our measured value is in the column logCFU, and is assumed to be influenced by factors in the columns KO, empty, and complement (where they apply/are equal to one). We represent this with the R statement below:\nlogCFU ~ KO + empty + complement\nwhich reads: “logCFU is influenced by (~) the sum of effects of KO, empty, and complement (where they apply).”\n\n\n5.3.3 Fit the model\nTo fit our data to this model, we use this model definition in the lm() function as below (specifying that the dataframe we’re using is catheter):\ncatheter_model &lt;- lm(logCFU ~ KO + empty + complement, data=catheter)\n\n\n\n\n\n\nChallenge\n\n\n\nFit the catheter data to this model in the WebR cell below.\nUse the R code:\ncatheter_model &lt;- lm(logCFU ~ KO + empty + complement, data=catheter)\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Modelling Experimental Data</span>"
    ]
  },
  {
    "objectID": "modelling_data.html#interpreting-the-catheter-model",
    "href": "modelling_data.html#interpreting-the-catheter-model",
    "title": "5  Modelling Experimental Data",
    "section": "5.4 Interpreting the catheter model",
    "text": "5.4 Interpreting the catheter model\nThe fitted model is stored in the variable catheter_model, and we can obtain useful information from it in a number of ways.\n\n5.4.1 Coefficients and confidence intervals\nThe coefficients that the model reports are the estimated effects of each factor of interest. To obtain the coefficients, use the R code below to produce a summary of the fitted model:\ncoef(catheter_model)\nThe confidence intervals reported by the model are the range of values that the model thinks are most likely for the coefficients. These work the same way as coefficients for t-tests and similar statistical methods: the range of values bounded by the 2.5% and 97.5% confidence limits is a 95% confidence interval. We would expect that the true value of the coefficient being estimated would lie in this range 95% of the time.\nTo find the confidence intervals for the coefficients of the model, use the R code below:\nconfint(catheter_model)\n\n\n\n\n\n\nChallenge\n\n\n\nFind the estimated coefficients and corresponding confidence intervals for the catheter model in the WebR cell below.\nUse the R code:\ncoef(catheter_model)\nconfint(catheter_model)\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n5.4.2 Reading the output\nYou should see output that resembles the data below:\n(Intercept)          KO       empty  complement \n  6.3382829  -0.3213144  -0.1465880   0.3986531 \n\n                  2.5 %      97.5 %\n(Intercept)  6.10862926 6.567936607\nKO          -0.64609377 0.003464903\nempty       -0.47136735 0.178191328\ncomplement   0.07387378 0.723432458\n\n5.4.2.1 Coefficients\nThe output of coef(catheter_model) shows values for each factor of interest in the column Estimate, plus a value for “(Intercept).”\n(Intercept)          KO       empty  complement \n  6.3382829  -0.3213144  -0.1465880   0.3986531 \n\n(Intercept) is the wild-type (WT)/control logCFU value coefficient estimate. Here this is 6.34, which looks to be a reasonable value by visual comparison with Figure 4.1.\nThe KO coefficient estimate is -0.32, which indicates that knocking out the etpD gene reduces the logCFU value by 0.32 units (as this is a log scale, that corresponds approximately to halving the number of recovered CFUs).\nThe empty coefficient estimate is -0.15, which indicates a further reduction in bacterial recovery is seen due to inserting the plasmid.\nThe complement coefficient estimate is 0.40 - of the same order as the reduction in logCFU seen for the gene knockout. This implies that returning the gene also restores bacterial recovery to the original, wild-type level.\n\n\n\n5.4.2.2 Confidence intervals\nThe confint(catheter_model) output lists the expected 95% confidence intervals for the coefficients.\n                  2.5 %      97.5 %\n(Intercept)  6.10862926 6.567936607\nKO          -0.64609377 0.003464903\nempty       -0.47136735 0.178191328\ncomplement   0.07387378 0.723432458\n\n\n\n\n\n\nTip\n\n\n\nThis is the more useful output for deciding whether there is a real effect due to a factor of interest\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe point estimate of a coefficient may be non-zero, implying a negative or positive effect of that factor on the measured outcome but, if the confidence interval includes zero it is not reasonable to exclude the possibility that there is actually no effect.\n\n\nIn this experiment, the confidence intervals tell us the following:\n\nThe (Intercept)/WT/baseline logCFU is likely to lie between 6.11 and 6.57 units\nThe effect of knocking out the gene (KO) is likely to lie between -0.646 and 0.003 units which appears to be a negative effect, but as the interval includes zero we cannot strictly rule out that there is no effect\nIntroduction of the plasmid vector changes logCFU by between -0.47 and 0.18 units which includes zero, and so we can’t rule out that there is no effect\nComplementing the etpD gene (complement) increases logCFU by between 0.074 and 0.72 units, enhancing recovery of bacteria\n\n\n\n\n\n\n\nCaution\n\n\n\nThese results taken together suggest that knocking out the etpD gene diminishes recovery of bacteria (implying reduced adherence) and that complementing the gene restores the recovery level. However, the statistics are equivoval because the KO confidence interval includes zero.\nWe can, however, be reasonably certain that addition of the empty vector does not appear to influence logCFU strongly, as the confidence interval includes zero.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Modelling Experimental Data</span>"
    ]
  },
  {
    "objectID": "modelling_data.html#fitting-and-interpreting-the-tissue-model",
    "href": "modelling_data.html#fitting-and-interpreting-the-tissue-model",
    "title": "5  Modelling Experimental Data",
    "section": "5.5 Fitting and interpreting the tissue model",
    "text": "5.5 Fitting and interpreting the tissue model\n\n\n\n\n\n\nChallenge\n\n\n\nFit the tissue data to this model, using the WebR cell below.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nI need a hint\n\n\n\n\n\nUse the same functions as for the catheter model, but be sure to use the tissue dataset instead\n\nUse lm() to fit the model\nUse coef() and confint() to find the coefficients for the WT, KO, empty, and complement factors of interest\n\n\n\n\n\n\n\n\n\n\nHelp, I’m stuck!\n\n\n\n\n\nUse the R code below to fit the model\ntissue_model &lt;- lm(logCFU ~ KO + empty + complement, data=tissue)\nUse the R code below to see the estimated coefficients and confidence intervals\ncoef(tissue_model)\nconfint(tissue_model)\n\n\n\n\n5.5.1 Interpreting the results\n\n\n\n\n\n\nQuestions\n\n\n\nWhat are the coefficients of the four factors of interest, and what do they imply about the effects of each factor?\n\nWT/(Intercept)\nKO\nempty\ncomplement\n\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\n&gt; coef(tissue_model)\n(Intercept)          KO       empty  complement \n 6.54455199 -0.30834731 -0.06356898 -0.05806111 \n\nThe (Intercept) value is 6.54, which is consistent with the baseline recovery from the catheter experiment\nThe KO value is -0.31, which is negative, so consistent with etpD deletion resulting in reduced recovery of bacteria/reduced adhesion\nThe empty value is -0.06 which is close to zero and consistent with there being no strong effect on logCFU due to incorporation of the plasmid vector\nThe complement value is -0.06 which is also small and close to zero, consistent with there being no strong effect on logCFU due to reintroduction of the etpD gene\n\n\n\n\n\n\n\n\n\n\nQuestions\n\n\n\nWhat are the confidence intervals for the coefficients of the four factors of interest, and what do they imply about the effects of each factor?\n\nWT/(Intercept)\nKO\nempty\ncomplement\n\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\n&gt; confint(tissue_model)\n                 2.5 %     97.5 %\n(Intercept)  6.4070598  6.6820442\nKO          -0.5027906 -0.1139040\nempty       -0.2580123  0.1308744\ncomplement  -0.2525044  0.1363822\n\nThe (Intercept) value lies between 6.41 and 6.68, which is consistent with the baseline recovery from the catheter experiment\nThe KO value lies between -0.50 and -0.11, which are both negative so this is consistent with etpD deletion resulting in reduced recovery of bacteria/reduced adhesion\nThe empty confidence interval includes zero and is consistent with there being no strong effect on logCFU due to incorporation of the plasmid vector\nThe complement confidence interval includes zero and is consistent with there being no strong effect on logCFU due to reintroduction of the etpD gene",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Modelling Experimental Data</span>"
    ]
  },
  {
    "objectID": "modelling_data.html#but-wait",
    "href": "modelling_data.html#but-wait",
    "title": "5  Modelling Experimental Data",
    "section": "5.6 But wait!",
    "text": "5.6 But wait!\nBack in Chapter 4 we saw that the experimental data was affected by batch effects - systematic influences on the measured values that seemed to come from the way the experiment was conducted, not the biological factors whose influence we actually wanted to measure.\n\n\n\n\n\n\nCaution\n\n\n\nMaybe the results we have just obtained aren’t as correct, or at least as accurate, as they seem because of these systematic batch effects?\nWe should try to account for systematic batch effects as much as possible, and we’ll do this in the next section.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Modelling Experimental Data</span>"
    ]
  },
  {
    "objectID": "eliminating_batches.html",
    "href": "eliminating_batches.html",
    "title": "6  Eliminating batch effects",
    "section": "",
    "text": "6.1 Introduction\nIn Chapter 5 we saw how to use a linear modelling approach to estimate directly the influence of gene knockout and other interventions on the amount of viable bacteria recovered (and so infer a difference in “stickiness” or adherence to a substrate).\nThis is an extremely powerful method not just because it lets us identify the strengths of multiple effects directly and simultaneously from our data (rather than testing for “a difference” as with ANOVA/t-tests), but because we can also use them to exclude the effects of interfering influences such as batch effects.\nIn this section, we will see how to use the R package lme4 to account for and remove the effects of those unwanted influences.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Eliminating batch effects</span>"
    ]
  },
  {
    "objectID": "eliminating_batches.html#introduction",
    "href": "eliminating_batches.html#introduction",
    "title": "6  Eliminating batch effects",
    "section": "",
    "text": "Note\n\n\n\nlme4 is a linear modelling package that extends the capability of R’s built-in (and still extremely powerful) linear modelling function lm() to enable mixed-effects models. This extension is what allows us to account for batch effects in our experiment.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Eliminating batch effects</span>"
    ]
  },
  {
    "objectID": "eliminating_batches.html#the-model",
    "href": "eliminating_batches.html#the-model",
    "title": "6  Eliminating batch effects",
    "section": "6.2 The Model",
    "text": "6.2 The Model\nWe take as our starting point the model we had in Chapter 5:\n\\[ \\textrm{measured logCFU} = \\textrm{baseline} + \\textrm{knockout} + \\textrm{empty} + \\textrm{complement} + \\epsilon  \\tag{6.1}\\]\nWe want to extend Equation 6.1 to account for the influence of each individual batch, separately. That is, we want to represent a situation where all measurements in batch 1 are under a similar influence, but that influence is different to the one affecting batches 2-8, and so on.\nIn mathematical notation, we could modify Equation 6.1 to represent the measurement for a row \\(i\\) in the table as:\n\\[ \\textrm{measured logCFU}_i = \\textrm{baseline} + \\textrm{knockout} + \\textrm{empty} + \\textrm{complement} + \\textrm{batch}_i + \\epsilon   \\tag{6.2}\\]\nwhere \\(\\textrm{batch}_i\\) represents “influence due to the corresponding batch for measurement \\(i\\).” This is quite a small adjustment on paper (or the screen!), but it can have very wide-ranging effects.\n\n\n\n\n\n\nCaution\n\n\n\n\n\nWe’re taking some liberties with formal mathematical notation here and leaving out some components of the equation to make the connection between biology and the equation clearer.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Eliminating batch effects</span>"
    ]
  },
  {
    "objectID": "eliminating_batches.html#the-model-in-r",
    "href": "eliminating_batches.html#the-model-in-r",
    "title": "6  Eliminating batch effects",
    "section": "6.3 The Model in R",
    "text": "6.3 The Model in R\nThe change we need to make to our model representation in R is similarly small. The previous model looked like this:\nlogCFU ~ KO + empty + complement\nand the modified model requires the addition of only one term:\nlogCFU ~ KO + empty + complement + (1 | batch)\nSo, what does (1 | batch) mean?\n\n6.3.1 Fixed and random effects\nThe model we have built is now what’s called a “mixed model” that incorporates fixed effects and random effects. But what are they and why do they differ?\nFixed effects are the influences that we focus our practical experiments on. In our experiments we make a specific, intentional change to the system (e.g. knocking out a gene) that we expect to have a consistent effect on the outcome. The term “fixed” in “fixed effect” refers to the expectation of this effect being constant across individual runs of the experiment.\nRandom effects are influences on the outcome that can vary between individual runs (such as the “measurement error \\(\\epsilon\\) which reflects small random variations in each measurement), or between groups of runs - such as the batch-level differences we saw in Chapter 5. We expect that every measurement in the same batch is affected in approximately the same way, with some random error, but that the effect can differ between batches.\nThe part of the R model expressed by (1 | batch) represents this random effect due to a measurement being made in a particular batch.\n\n\n\n\n\n\nNote\n\n\n\nAs before, we will walk through the modelling process for the catheter data, but modelling the tissue data is left as an exercise for you to solve.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Eliminating batch effects</span>"
    ]
  },
  {
    "objectID": "eliminating_batches.html#fitting-the-catheter-model",
    "href": "eliminating_batches.html#fitting-the-catheter-model",
    "title": "6  Eliminating batch effects",
    "section": "6.4 Fitting the catheter model",
    "text": "6.4 Fitting the catheter model\nWe will use the lme4 function lmer() to fit the model in Equation 6.2 to our catheter dataset in the WebR cells below.\n\n6.4.1 Load the data\n\n\n\n\n\n\nImportant\n\n\n\nWe have preloaded the data for you as the dataframes tissue and catheter.\nUse the WebR cell below to confirm the catheter data is loaded\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNote that the data contains three columns: KO, empty, and complement that contain either a 1 or 0 value, and a batch column that indicates the batch to which the measurement belongs\nThe KO, empty, and complement columns describe whether the logCFU measurement in the row corresponds to a line that is affected by a gene knockout (KO = 1), the presence of a plasmid vector (empty = 1), or the reintroduced gene (complement = 1). These columns allow us to use the lmer() function to estimate the influence of each biological intervention.\nThe batch column contains a number representing the batch to which the measurement belongs. The R model uses this to estimate (and remove) the effect on measurement that appears to be due only to it belonging to that batch.\n\n\n\n\n\n\nNote\n\n\n\nWe again assume that measurements of the bacteria all share the same (wild-type) baseline.\n\n\n\n\n6.4.2 Define the model\nAs noted above, R’s model syntax lets us include the influence of batches as a random effect.\nHere, our measured value is in the column logCFU, and is assumed to be influenced by factors in the columns KO, empty, and complement (where they apply/are equal to one), and also by a random influence shared by all members of the same batch number. We represent this with the R statement below:\nlogCFU ~ KO + empty + complement + (1 | batch)\nwhich reads: “logCFU is influenced by (~) the sum of effects of KO, empty, and complement (where they apply), and by a batch-specific effect corresponding to batch.”\n\n\n6.4.3 Fit the model\nTo fit our data to this model, we use this model definition in the lmer() function as below (specifying that the dataframe we’re using is catheter):\ncatheter_model &lt;- lmer(logCFU ~ KO + empty + complement + (1 | batch), data=catheter)\n\n\n\n\n\n\nChallenge\n\n\n\nFit the catheter data to this model in the WebR cell below.\nUse the R code:\ncatheter_mixed_model &lt;- lmer(logCFU ~ KO + empty + complement + (1 | batch), data=catheter)\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Eliminating batch effects</span>"
    ]
  },
  {
    "objectID": "eliminating_batches.html#interpreting-the-catheter-model",
    "href": "eliminating_batches.html#interpreting-the-catheter-model",
    "title": "6  Eliminating batch effects",
    "section": "6.5 Interpreting the catheter model",
    "text": "6.5 Interpreting the catheter model\nThe fitted model is stored in the variable catheter_mixed_model and, just as before, we can obtain useful information from it in a number of ways.\n\n6.5.1 Coefficients and confidence intervals\nThe coefficients that the model reports are the estimated effects of each factor of interest. To obtain the coefficients, use the R code below to produce a summary of the fitted model:\nsummary(catheter_mixed_model)\n\n\n\n\n\n\nNote\n\n\n\nWe use summary() instead of coef() because the mixed-effects model is more complex and the output is not quite the same.\n\n\nThe confidence intervals reported by the model are the range of values that the model thinks are most likely for the coefficients. These work the same way as coefficients for t-tests and similar statistical methods: the range of values bounded by the 2.5% and 97.5% confidence limits is a 95% confidence interval. We would expect that the true value of the coefficient being estimated would lie in this range 95% of the time.\nTo find the confidence intervals for the coefficients of the model, use the R code below:\nconfint(catheter_mixed_model)\n\n\n\n\n\n\nChallenge\n\n\n\nFind the estimated coefficients and corresponding confidence intervals for the catheter model in the WebR cell below.\nUse the R code:\nsummary(catheter_mixed_model)\nconfint(catheter_mixed_model)\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n6.5.2 Reading the output\nYou should see output that resembles the data below:\nLinear mixed model fit by REML ['lmerMod']\nFormula: logCFU ~ KO + empty + complement + (1 | batch)\n   Data: catheter\n\nREML criterion at convergence: 18.2\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.4164 -0.5003  0.1475  0.5460  1.9160 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n batch    (Intercept) 0.11587  0.3404  \n Residual             0.06385  0.2527  \nNumber of obs: 40, groups:  batch, 4\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept)   6.3383     0.2536  24.992\nKO           -0.3213     0.1130  -2.843\nempty        -0.1466     0.3587  -0.409\ncomplement    0.3987     0.1130   3.528\n\nCorrelation of Fixed Effects:\n           (Intr) KO     empty \nKO         -0.223              \nempty      -0.637 -0.158       \ncomplement  0.000  0.000 -0.158\nComputing profile confidence intervals ...\n                 2.5 %     97.5 %\n.sig01       0.1163306  0.6012999\n.sigma       0.1981686  0.3153956\n(Intercept)  5.8858767  6.7906885\nKO          -0.5424385 -0.1001904\nempty       -0.7863870  0.4932101\ncomplement   0.1775290  0.6197772\n\n6.5.2.1 Coefficients\nThe output of summary(catheter_mixed_model) shows more information than for the output of lm() with coef(), but we can focus on the important section, which is in the section titled Fixed Effects:\nFixed effects:\n            Estimate Std. Error t value\n(Intercept)   6.3383     0.2536  24.992\nKO           -0.3213     0.1130  -2.843\nempty        -0.1466     0.3587  -0.409\ncomplement    0.3987     0.1130   3.528\n\n(Intercept) is again the wild-type (WT)/control logCFU value coefficient estimate. Here this is 6.34, which looks to be a reasonable value by visual comparison with Figure 4.1.\nThe KO coefficient estimate is -0.32, which indicates that knocking out the etpD gene reduces the logCFU value by 0.32 units (as this is a log scale, that corresponds approximately to halving the number of recovered CFUs).\nThe empty coefficient estimate is -0.15, which indicates a further reduction in bacterial recovery is seen due to inserting the plasmid.\nThe complement coefficient estimate is 0.40 - of the same order as the reduction in logCFU seen for the gene knockout. This implies that returning the gene also restores bacterial recovery to the original, wild-type level.\n\n\n\n6.5.2.2 Confidence intervals\nThe confint(catheter_mixed_model) output lists the expected 95% confidence intervals for the coefficients.\n                 2.5 %     97.5 %\n.sig01       0.1163306  0.6012999\n.sigma       0.1981686  0.3153956\n(Intercept)  5.8858767  6.7906885\nKO          -0.5424385 -0.1001904\nempty       -0.7863870  0.4932101\ncomplement   0.1775290  0.6197772\nWe can ignore the .sig01 and .sigma rows to focus on our fixed effects of interest.\n\nThe (Intercept)/WT/baseline logCFU is likely to lie between 5.89 and 6.79 units\nThe effect of knocking out the gene (KO) is likely to lie between -0.54 and 0.010 units. The interval does not include zero so we can be confident that this is a negative effect.\nIntroduction of the plasmid vector changes logCFU by between -0.79 and 0.49 units which includes zero, and so we can’t rule out that there is no effect on logCFU due to presence of the plasmid\nComplementing the etpD gene (complement) increases logCFU by between 0.18 and 0.62 units, enhancing recovery of bacteria. This interval does not include zero so we can be confident that this is a positive effect.\n\n\n\n\n\n\n\nQuestion\n\n\n\nCompare the estimated effects (coefficients) for our fixed effects when fitting both models (the model above, and that in Chapter 5). How different are they and what can we conclude about the relative usefulness of each model?\n\nWT/(Intercept)\nKO\nempty\ncomplement\n\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\n&gt; coef(catheter_model)\n(Intercept)          KO       empty  complement \n  6.3382829  -0.3213144  -0.1465880   0.3986531 \n\n&gt; summary(catheter_mixed_model)\nFixed effects:\n            Estimate Std. Error t value\n(Intercept)   6.3383     0.2536  24.992\nKO           -0.3213     0.1130  -2.843\nempty        -0.1466     0.3587  -0.409\ncomplement    0.3987     0.1130   3.528\nThe estimated coefficients for the (Intercept)/WT, KO, empty, and complement fixed effects are essentially identical to four decimal places.\nThere is no difference between the two models in their estimates of effect sizes. This suggests that both models converge to consistent estimates which gives confidence in the result.\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCompare the confidence intervals for the estimated effects (coefficients) of our fixed effects when fitting both models (the model above, and that in Chapter 5). How different are they and what can we conclude about the relative usefulness of each model?\n\nWT/(Intercept)\nKO\nempty\ncomplement\n\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\n&gt; confint(catheter_model)\n                  2.5 %      97.5 %\n(Intercept)  6.10862926 6.567936607\nKO          -0.64609377 0.003464903\nempty       -0.47136735 0.178191328\ncomplement   0.07387378 0.723432458\n\n&gt; confint(catheter_mixed_model)\n                  2.5 %      97.5 %\n(Intercept)  5.8858767  6.7906885\nKO          -0.5424385 -0.1001904\nempty       -0.7863870  0.4932101\ncomplement   0.1775290  0.6197772\n\nThe confidence interval for (Intercept)/WT is wider for the mixed model, but both models estimate an interval that does not include zero (so is confidently positive), and they estimate the same logCFU of 6.3383.\nThe confidence interval for KO includes zero in the original model (catheter_model) and so cannot confidently be assumed to be negative. The mixed model (catheter_mixed_model) confidence interval does not include zero, and is narrower. We can be more confident that the data shows a reduction in logCFU when correcting for batch effects.\nThe confidence interval for empty is wider for the mixed model, but both models estimate an interval that includes zero, so we cannot exclude that there is no effect on logCFU of introducing the plasmid, in either model. Both models estimate the same logCFU of -0.1466.\nThe confidence interval for complement is positive and does not include zero in both model results, so we can be confident that the data shows complementation increases the logCFU. The confidence interval is narrower for the mixed model suggesting that our estimate is more precise, though both models estimate the same effect size.\n\n\n\n\n\n\n\n\n\n\nA note on the answer\n\n\n\n\n\nThe mixed model that accounts for systematic errors introduced by batching has not affected our estimate of effect sizes for each fixed effect (e.g. knocking out the etpD gene), but it has affected our confidence in each estimate.\nSpecifically, by taking batches into account we have made the estimates of the effect of knocking out and complementing the etpD gene more precise (i.e. there is less uncertainty about whether the effect is nonzero, and about the size of the effect).",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Eliminating batch effects</span>"
    ]
  },
  {
    "objectID": "eliminating_batches.html#fitting-and-interpreting-the-tissue-model",
    "href": "eliminating_batches.html#fitting-and-interpreting-the-tissue-model",
    "title": "6  Eliminating batch effects",
    "section": "6.6 Fitting and interpreting the tissue model",
    "text": "6.6 Fitting and interpreting the tissue model\n\n\n\n\n\n\nChallenge\n\n\n\nFit the tissue data to the mixed-effects model, using the WebR cell below.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nI need a hint\n\n\n\n\n\nUse the same functions as for the catheter model, but be sure to use the tissue dataset instead\n\nUse lmer() to fit the model\nUse summary() and confint() to find the coefficients for the WT, KO, empty, and complement factors of interest\n\n\n\n\n\n\n\n\n\n\nHelp, I’m stuck!\n\n\n\n\n\nUse the R code below to fit the model\ntissue_mixed_model &lt;- lmer(logCFU ~ KO + empty + complement + (1 | batch), data=tissue)\nUse the R code below to see the estimated coefficients and confidence intervals\nsummary(tissue_mixed_model)\nconfint(tissue_mixed_model)\n\n\n\n\n6.6.1 Interpreting the results\n\n\n\n\n\n\nQuestions\n\n\n\nWhat are the coefficients of the four factors of interest, and what do they imply about the effects of each factor? How do they compare to the estimates made by the model that did not take batching into account?\n\nWT/(Intercept)\nKO\nempty\ncomplement\n\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\n&gt; summary(tissue_mixed_model)\nFixed effects:\n            Estimate Std. Error t value\n(Intercept)  6.54455    0.14185  46.137\nKO          -0.30835    0.06142  -5.020\nempty       -0.06357    0.20061  -0.317\ncomplement  -0.05806    0.06142  -0.945\n\nThe (Intercept) value is 6.54, which is consistent with the baseline recovery from the catheter experiment, and the previous model.\nThe KO value is -0.31, which is negative, so consistent with etpD deletion resulting in reduced recovery of bacteria/reduced adhesion, and the previous model.\nThe empty value is -0.06 which is close to zero and consistent with there being no strong effect on logCFU due to incorporation of the plasmid vector, and the previous model.\nThe complement value is -0.06 which is also small and close to zero, consistent with there being no strong effect on logCFU due to reintroduction of the etpD gene, and also the previous model.\n\n\n\n\n\n\n\n\n\n\nQuestions\n\n\n\nWhat are the confidence intervals for the coefficients of the four factors of interest, and what do they imply about the effects of each factor? How do they compare to those of the previous model?\n\nWT/(Intercept)\nKO\nempty\ncomplement\n\n\n\n\n\n\n\n\n\nAnswers\n\n\n\n\n\n&gt; confint(tissue_model)\n                 2.5 %      97.5 %\n(Intercept)  6.2729898  6.81611414\nKO          -0.4286512 -0.18804344\nempty       -0.4476160  0.32047790\ncomplement  -0.1783650  0.06224276\n\nThe (Intercept) value lies between 6.27 and 6.81, which is consistent with the baseline recovery from the catheter experiment, and slightly wider than the original model without batching.\nThe KO value lies between -0.42 and -0.18, which are both negative so this is consistent with etpD deletion resulting in reduced recovery of bacteria/reduced adhesion. It is also much narrower than the original model’s interval, implying a more precise estimate.\nThe empty confidence interval includes zero and is consistent with there being no strong effect on logCFU due to incorporation of the plasmid vector. It is wider than the interval estimated by the original model.\nThe complement confidence interval includes zero and is consistent with there being no strong effect on logCFU due to reintroduction of the etpD gene. It is also much narrower than the original model’s interval, implying a more precise estimate.\n\n\n\n\n\n\n\n\n\n\nA note on the answer\n\n\n\n\n\nThe mixed model that accounts for systematic errors introduced by batching has, again, not affected our estimate of effect sizes for each fixed effect (e.g. knocking out the etpD gene), but it has once more affected our confidence in each estimate.\nSpecifically, by taking batches into account we have made the estimates of the effect of knocking out and complementing the etpD gene more precise (i.e. there is less uncertainty about whether the effect is nonzero, and about the size of the effect).\nHere, the results give us confidence that knocking out etpD results in reduced logCFU, but that restoring/complementing the gene does not affect logCFU. This is an intriguing result that requires explanation and, because we have been able to account for systematic sources of experimental error, i.e. batch effects, we can be confident in our conclusions and that there is a new question to be answered:\nWhy does knocking out etpD reduce recovery from catheter material and human tissue, but only restore recovery from catheter material?",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Eliminating batch effects</span>"
    ]
  },
  {
    "objectID": "eliminating_batches.html#summary",
    "href": "eliminating_batches.html#summary",
    "title": "6  Eliminating batch effects",
    "section": "6.7 Summary",
    "text": "6.7 Summary\n\n\n\n\n\n\nGreat job!\n\n\n\nIn this section taken real experimental data through a fairly advanced statistical analysis to eliminate unwanted sources of error, and improved your confidence in your results. You have:\n\nunderstood how to build up a statistical model that represents multiple experimental factors of interest in R\nused R to model experimental data with mixed effects (fixed and random)\nobtained estimates of the sizes of effects due to multiple experimental interventions\nobtained estimates of confidence in the sizes of those effects, including whether the effects are really different from zero\n\n\n\nNow proceed to ?sec-conclusions to wrap up the workshop.",
    "crumbs": [
      "Correcting for batch effects",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Eliminating batch effects</span>"
    ]
  }
]